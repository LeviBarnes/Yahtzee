#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 5.4
#  in conjunction with Tcl version 8.6
#    Sep 30, 2020 10:02:50 AM PDT  platform: Linux

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import YahtzeeGUI_support as support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    support.set_Tk_var()
    top = Toplevel1 (root)
    support.init(root, top)
    root.mainloop()

w = None
def create_Toplevel1(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_Toplevel1(root, *args, **kwargs)' .'''
    global w, w_win, root
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    support.set_Tk_var()
    top = Toplevel1 (w)
    support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

class Toplevel1:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'

        top.geometry("840x568+602+67")
        top.minsize(1, 1)
        top.maxsize(3505, 1170)
        top.resizable(1, 1)
        top.title("New Toplevel")

        self.KeepButtons = []
        self.Dice = []
        ypos_button = 0.07
        ypos_die = 0.018
        for q in range(5):
            this_button = tk.Checkbutton(top)
            this_button.place(relx=0.714, rely=ypos_button, relheight=0.039
                        , relwidth=0.08)
            this_button.configure(justify='left')
            this_button.configure(text='''Keep''')
            this_button.configure(variable=support.keep_buttons[q])
            self.KeepButtons.append(this_button)

            this_die = tk.Frame(top)
            this_die.place(relx=0.833, rely=ypos_die, relheight=0.167
                    , relwidth=0.119)
            this_die.configure(relief='groove')
            this_die.configure(borderwidth="2")
            this_die.configure(relief="groove")
            self.Dice.append(this_die)
            ypos_button = ypos_button + 0.20
            ypos_die = ypos_die + 0.20

        self.Roll = tk.Button(top)
        self.Roll.place(relx=0.548, rely=0.44, height=51, width=111)
        self.Roll.configure(text='''Roll!''')

        self.ScoreSheetLabel = tk.Label(top)
        self.ScoreSheetLabel.place(relx=0.05, rely=0.08, height=21, width=200)
        self.ScoreSheetLabel.configure(text="Scoresheet")

        ypos = 0.125
        self.Names = []
        self.Scores = []
        self.ScoreButt = []
        for name in ['Ones', 'Twos', 'Threes', 'Fours', 'Fives', 'Sixes',
                'Three of a Kind', 'Four of a Kind', 'Full House',
                'Small Straight', 'Large Straight', 'Chance', 'Yahtzee']:
            this_name = tk.Label(top)
            this_name.place(relx=0.036, rely=ypos, height=21, width=100)
            this_name.configure(activebackground="#ffffff")
            this_name.configure(background="#ffffff")
            this_name.configure(text=name)
            self.Names.append(this_name)

            this_score = tk.Label(top)
            this_score.place(relx=0.175, rely=ypos, height=21, width=28)
            this_score.configure(background="#ffffff")
            this_score.configure(text='''''')
            self.Scores.append(this_score)

            this_butt = tk.Button(top)
            this_butt.place(relx=0.222, rely=ypos, height=21, width=181)
            this_butt.configure(text="Score as " + name)
            self.ScoreButt.append(this_button)
            ypos = ypos + 0.05

            if name == "Sixes":
                self.UpperScoreLab = tk.Label(top)
                self.UpperScoreLab.place(relx=0.016, rely=ypos, height=21, width=120)
                self.UpperScoreLab.configure(activebackground="#ffffff")
                self.UpperScoreLab.configure(background="#ffffff")
                self.UpperScoreLab.configure(text="Upper Level Tot")
                self.UpperScore = tk.Label(top)
                self.UpperScore.place(relx=0.175, rely=ypos, height=21, width=28)
                self.UpperScore.configure(background="#ffffff")
                self.UpperScore.configure(text='''''')
                ypos = ypos + 0.05

                self.BonusLab = tk.Label(top)
                self.BonusLab.place(relx=0.036, rely=ypos, height=21, width=100)
                self.BonusLab.configure(activebackground="#ffffff")
                self.BonusLab.configure(background="#ffffff")
                self.BonusLab.configure(text="Bonus")
                self.Bonus = tk.Label(top)
                self.Bonus.place(relx=0.175, rely=ypos, height=21, width=28)
                self.Bonus.configure(background="#ffffff")
                self.Bonus.configure(text='''''')
                self.BonusNote= tk.Label(top)
                self.BonusNote.place(relx=0.222, rely=ypos, height=21, width=261)
                self.BonusNote.configure(text="35 point bonus if Upper Level > 63")
                ypos = ypos + 0.05

if __name__ == '__main__':
    vp_start_gui()





